buildscript {
  repositories {
	mavenCentral()
  }
  dependencies {
    classpath 'com.google.gradle:osdetector-gradle-plugin:1.4.0'
  }
}

repositories {
  maven {
    url "${System.getProperty('user.home')}/releases/maven/development"
  }
  maven {
	url = "http://first.wpi.edu/FRC/roborio/maven/release"
  }
  mavenCentral()
}

apply plugin: 'com.google.osdetector'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

mainClassName = "org.usfirst.frc2084.CMonster2016.vision.StandaloneVision"

javadoc {
  failOnError false
}

dependencies {
  compile project(':VisionProcessor2016')
  String ntType = "desktop"
  if (osdetector.arch.contains("arm")) {
  	ntType = "arm"
  }
  compile 'edu.wpi.first.wpilib.networktables.java:NetworkTables:3.+:' + ntType
}

distributions {
    main {
        contents {
            from(file(project(':VisionProcessor2016').projectDir.toString() + '/lib')) {
                into("lib")
    			exclude "opencv"
            }
            from(file(project(':VisionProcessor2016').projectDir.toString() + '/build/libs/gpuvision/shared')) {
                into("lib")
            }
        }
    }
}

task updateDist(type: Copy, dependsOn: ':jar') {
	from jar.archivePath
	from project(':VisionProcessor2016').projectDir.toString() + '/build/lib/VisionProcessor2016.jar'
	into '$buildDir/install/VisionServer2016/lib'
}

jar {
  manifest {
    attributes 'Main-Class': 'org.usfirst.frc2084.CMonster2016.vision.StandaloneVision'
  }
}
